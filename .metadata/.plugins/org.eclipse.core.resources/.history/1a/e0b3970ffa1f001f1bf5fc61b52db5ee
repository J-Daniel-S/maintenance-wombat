package the.best.maintenancewombat.services;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

import org.redisson.api.RedissonReactiveClient;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.reactive.socket.WebSocketHandler;
import org.springframework.web.reactive.socket.WebSocketSession;

import com.fasterxml.jackson.core.JsonProcessingException;

import jakarta.annotation.PostConstruct;
import reactor.core.publisher.Mono;
import the.best.maintenancewombat.documents.User;
import the.best.maintenancewombat.documents.branches.UserType;

public class UserService implements WebSocketHandler {

	private Map<String, User> users = new ConcurrentHashMap<>();

	@Autowired
	private RedissonReactiveClient client;

	@PostConstruct
	public void initUserHash() {
		User user1 = new User("Kevin");
		User user2 = new User("Timmy", "default", UserType.MAINTENANCE);

		client.getMap("users")
			.fastPut(user1.getName(), user1)
			.then(Mono.fromRunnable(() -> {
				users.put(user1.getName(), user1);
			})).subscribe();
		client.getMap("users")
			.fastPut(user2.getName(), user2)
			.then(Mono.fromRunnable(() -> {
				users.put(user1.getName(), user2);
			})).subscribe();

	}

	@Override
	public Mono<Void> handle(WebSocketSession session) {
		// TODO Auto-generated method stub
		return null;
	}

}
